{"version":3,"sources":["webpack:///./src/components/jsbase/JsBaseHigher3.vue?ba3e","webpack:///./src/components/jsbase/JsBaseHigher3.vue?eef2","webpack:///src/components/jsbase/JsBaseHigher3.vue","webpack:///./src/components/jsbase/JsBaseHigher3.vue?adba","webpack:///./src/components/jsbase/JsBaseHigher3.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","attrs","slot","staticStyle","staticClass","staticRenderFns","name","data","key","created","component"],"mappings":"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","file":"js/chunk-f4d28f68.15b1c89a.js","sourcesContent":["import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./JsBaseHigher3.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./JsBaseHigher3.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h2',[_vm._v(\"Promise\")]),_c('el-alert',{attrs:{\"type\":\"error\",\"closable\":false,\"effect\":\"dark\"}},[_c('ul',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('li',[_vm._v(\" ES6 规定，Promise 对象是一个构造函数，用来生成 Promise 实例。Promise 构造函数接受一个 \"),_c('i',{staticStyle:{\"color\":\"#303133\"}},[_vm._v(\"函数\")]),_vm._v(\" 作为参数，该函数的两个参数分别是 resolve 和 reject 。 \")]),_c('li',[_vm._v(\" resolve 函数的作用是，将 Promise 对象的状态从“未完成”变为“成功”（即从 pending 变为 resolved），在异步操作成功时调用，并将异步操作的结果，作为参数传递出去； \")]),_c('li',[_vm._v(\" reject 函数的作用是 ，将 Promise 对象的状态从“未完成”变为“失败”（即从 pending 变为 rejected），在异步操作失败时调用，并将异步操作报出的错误，作为参数传递出去。 \")]),_c('li',[_vm._v(\"Promise 实例生成以后，可以用 then 方法分别指定 resolved 状态和 rejected 状态的回调函数。\")])])]),_c('el-card',{staticStyle:{\"width\":\"720px\",\"margin\":\"auto\"}},[_c('el-tag',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"实例1 ====> 分析\")]),_c('el-tag',{staticClass:\"code-wrap\",attrs:{\"type\":\"danger\"}},[_vm._v(\" const PROMISE = new Promise((resolve, reject) => { \"),_c('br'),_vm._v(\" console.log(1); \"),_c('br'),_vm._v(\" resolve(2); \"),_c('br'),_vm._v(\" console.log(3); \"),_c('br'),_vm._v(\" }); \"),_c('br'),_vm._v(\" PROMISE.then(value => { \"),_c('br'),_vm._v(\" console.log(value); \"),_c('br'),_vm._v(\" }).catch(error => { \"),_c('br'),_vm._v(\" console.log(error); \"),_c('br'),_vm._v(\" }); \"),_c('br'),_vm._v(\" console.log(4); \")]),_c('el-tag',{staticClass:\"code-wrap\",attrs:{\"type\":\"danger\"}},[_vm._v(\" 本例新建一个 Promise 实例🍐对象 ==> PROMISE ，而 Promise的然后执行 PROMISE 的 then 和 catch 运行结果：1,3,4,2;这是因为 Promise 是一个容器，里面有 resolve 和 reject 两个异步事件，在 PROMISE 执行之后，输出 \")])],1),_c('el-card',{staticStyle:{\"width\":\"720px\",\"margin\":\"auto\"}},[_c('el-tag',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"实例2 ====> 分析\")]),_c('el-tag',{staticClass:\"code-wrap\",attrs:{\"type\":\"danger\"}},[_vm._v(\" const PROMISE = new Promise((resolve, reject) => { \"),_c('br'),_vm._v(\" console.log(1); \"),_c('br'),_vm._v(\" reject(4); \"),_c('br'),_vm._v(\" resolve(2); \"),_c('br'),_vm._v(\" console.log(3); \"),_c('br'),_vm._v(\" }); \"),_c('br'),_vm._v(\" PROMISE.then(value => { \"),_c('br'),_vm._v(\" console.log(value); \"),_c('br'),_vm._v(\" }).catch(error => { \"),_c('br'),_vm._v(\" console.log(error); \"),_c('br'),_vm._v(\" }); \"),_c('br'),_vm._v(\" console.log(5); \")]),_c('br'),_c('el-tag',{staticStyle:{\"height\":\"auto\"},attrs:{\"type\":\"danger\"}},[_vm._v(\"sss\")]),_c('br'),_c('el-tag',{staticClass:\"code-wrap\",attrs:{\"type\":\"danger\"}},[_vm._v(\" const PROMISE = new Promise((resolve, reject) => { \"),_c('br'),_vm._v(\" console.log(1); \"),_c('br'),_vm._v(\" reject(4); \"),_c('br'),_vm._v(\" resolve(2); \"),_c('br'),_vm._v(\" console.log(3); \"),_c('br'),_vm._v(\" }); \"),_c('br'),_vm._v(\" PROMISE.then(value => { \"),_c('br'),_vm._v(\" console.log(value); \"),_c('br'),_vm._v(\" }).catch(error => { \"),_c('br'),_vm._v(\" console.log(error); \"),_c('br'),_vm._v(\" }); \"),_c('br'),_vm._v(\" console.log(5); \")])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <h2>Promise</h2>\r\n    <el-alert type=\"error\" :closable=\"false\" effect=\"dark\">\r\n      <ul slot=\"title\">\r\n        <li>\r\n          ES6 规定，Promise 对象是一个构造函数，用来生成 Promise 实例。Promise 构造函数接受一个\r\n          <i style=\"color:#303133\">函数</i>\r\n          作为参数，该函数的两个参数分别是 resolve 和 reject 。\r\n        </li>\r\n        <li>\r\n          resolve 函数的作用是，将 Promise 对象的状态从“未完成”变为“成功”（即从 pending 变为\r\n          resolved），在异步操作成功时调用，并将异步操作的结果，作为参数传递出去；\r\n        </li>\r\n        <li>\r\n          reject 函数的作用是 ，将 Promise 对象的状态从“未完成”变为“失败”（即从 pending 变为\r\n          rejected），在异步操作失败时调用，并将异步操作报出的错误，作为参数传递出去。\r\n        </li>\r\n        <li>Promise 实例生成以后，可以用 then 方法分别指定 resolved 状态和 rejected 状态的回调函数。</li>\r\n      </ul>\r\n    </el-alert>\r\n    <el-card style=\"width:720px;margin:auto\">\r\n      <el-tag slot=\"header\">实例1 ====> 分析</el-tag>\r\n      <el-tag type=\"danger\" class=\"code-wrap\">\r\n        const PROMISE = new Promise((resolve, reject) => {\r\n        <br />\r\n        console.log(1);\r\n        <br />\r\n        resolve(2);\r\n        <br />\r\n        console.log(3);\r\n        <br />\r\n        });\r\n        <br />\r\n        PROMISE.then(value => {\r\n        <br />\r\n        console.log(value);\r\n        <br />\r\n        }).catch(error => {\r\n        <br />\r\n        console.log(error);\r\n        <br />\r\n        });\r\n        <br />\r\n        console.log(4);\r\n      </el-tag>\r\n      <el-tag type=\"danger\" class=\"code-wrap\">\r\n        本例新建一个 Promise 实例🍐对象 ==> PROMISE ，而 Promise的然后执行 PROMISE 的 then 和 catch\r\n        运行结果：1,3,4,2;这是因为 Promise 是一个容器，里面有 resolve 和 reject 两个异步事件，在 PROMISE\r\n        执行之后，输出\r\n      </el-tag>\r\n    </el-card>\r\n    <el-card style=\"width:720px;margin:auto\">\r\n      <el-tag slot=\"header\">实例2 ====> 分析</el-tag>\r\n      <el-tag type=\"danger\" class=\"code-wrap\">\r\n        const PROMISE = new Promise((resolve, reject) => {\r\n        <br />\r\n        console.log(1);\r\n        <br />\r\n        reject(4);\r\n        <br />\r\n        resolve(2);\r\n        <br />\r\n        console.log(3);\r\n        <br />\r\n        });\r\n        <br />\r\n        PROMISE.then(value => {\r\n        <br />\r\n        console.log(value);\r\n        <br />\r\n        }).catch(error => {\r\n        <br />\r\n        console.log(error);\r\n        <br />\r\n        });\r\n        <br />\r\n        console.log(5);\r\n      </el-tag>\r\n      <br />\r\n      <el-tag type=\"danger\" style=\"height:auto\">sss</el-tag>\r\n      <br />\r\n      <el-tag type=\"danger\" class=\"code-wrap\">\r\n        const PROMISE = new Promise((resolve, reject) => {\r\n        <br />\r\n        console.log(1);\r\n        <br />\r\n        reject(4);\r\n        <br />\r\n        resolve(2);\r\n        <br />\r\n        console.log(3);\r\n        <br />\r\n        });\r\n        <br />\r\n        PROMISE.then(value => {\r\n        <br />\r\n        console.log(value);\r\n        <br />\r\n        }).catch(error => {\r\n        <br />\r\n        console.log(error);\r\n        <br />\r\n        });\r\n        <br />\r\n        console.log(5);\r\n      </el-tag>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"JsBaseHigher3\",\r\n  data() {\r\n    return {\r\n      key: \"value\"\r\n    };\r\n  },\r\n  created() {}\r\n};\r\n</script>\r\n\r\n<style>\r\n.code-wrap {\r\n  height: auto;\r\n  line-height: 1.5;\r\n  white-space: normal;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./JsBaseHigher3.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./JsBaseHigher3.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./JsBaseHigher3.vue?vue&type=template&id=a79f8af6&\"\nimport script from \"./JsBaseHigher3.vue?vue&type=script&lang=js&\"\nexport * from \"./JsBaseHigher3.vue?vue&type=script&lang=js&\"\nimport style0 from \"./JsBaseHigher3.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}