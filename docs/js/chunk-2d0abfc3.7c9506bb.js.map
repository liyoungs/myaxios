{"version":3,"sources":["webpack:///./src/components/jsbase/JsBase2.vue?3fb8","webpack:///src/components/jsbase/JsBase2.vue","webpack:///./src/components/jsbase/JsBase2.vue?1a63","webpack:///./src/components/jsbase/JsBase2.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticStyle","_v","attrs","staticRenderFns","name","created","myFunction","a","b","console","log","toString","mounted","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,KAAK,CAACE,YAAY,CAAC,aAAa,WAAW,CAACN,EAAIO,GAAG,qBAAqBH,EAAG,SAAS,CAACJ,EAAIO,GAAG,SAASH,EAAG,UAAU,CAACA,EAAG,WAAW,CAACI,MAAM,CAAC,UAAW,EAAM,MAAQ,gDAAgD,GAAGJ,EAAG,SAAS,CAACJ,EAAIO,GAAG,UAAUH,EAAG,UAAU,CAACA,EAAG,WAAW,CAACI,MAAM,CAAC,UAAW,EAAM,MAAQ,4BAA4BJ,EAAG,WAAW,CAACI,MAAM,CAAC,UAAW,EAAM,OAAS,OAAO,KAAO,QAAQ,MAAQ,0CAA0C,GAAGJ,EAAG,SAAS,CAACJ,EAAIO,GAAG,YAAYH,EAAG,UAAU,CAACA,EAAG,WAAW,CAACI,MAAM,CAAC,UAAW,EAAM,MAAQ,mCAAmC,GAAGJ,EAAG,SAAS,CAACJ,EAAIO,GAAG,UAAUH,EAAG,UAAU,CAACA,EAAG,WAAW,CAACI,MAAM,CAAC,UAAW,EAAM,MAAQ,gBAAgBJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACJ,EAAIO,GAAG,uBAAuBH,EAAG,WAAW,CAACI,MAAM,CAAC,UAAW,EAAM,MAAQ,gBAAgBJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACJ,EAAIO,GAAG,oBAAoBH,EAAG,KAAK,CAACJ,EAAIO,GAAG,iBAAiBH,EAAG,KAAK,CAACJ,EAAIO,GAAG,kBAAkBH,EAAG,KAAK,CAACJ,EAAIO,GAAG,wBAAwB,GAAGH,EAAG,SAAS,CAACJ,EAAIO,GAAG,UAAUH,EAAG,UAAU,CAACA,EAAG,WAAW,CAACI,MAAM,CAAC,UAAW,EAAM,MAAQ,cAAcJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACJ,EAAIO,GAAG,oBAAoBH,EAAG,KAAK,CAACJ,EAAIO,GAAG,kBAAkBH,EAAG,KAAK,CAACJ,EAAIO,GAAG,qBAAqBH,EAAG,KAAK,CAACJ,EAAIO,GAAG,wBAAwBH,EAAG,KAAK,CAACJ,EAAIO,GAAG,gCAAgC,GAAGH,EAAG,SAAS,CAACJ,EAAIO,GAAG,iBAAiBH,EAAG,MAAMA,EAAG,SAAS,CAACJ,EAAIO,GAAG,UAAUH,EAAG,UAAU,CAACA,EAAG,WAAW,CAACI,MAAM,CAAC,UAAW,EAAM,MAAQ,yBAAyBJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACJ,EAAIO,GAAG,wCAAwCH,EAAG,IAAI,CAACJ,EAAIO,GAAG,oBAAoBP,EAAIO,GAAG,SAASH,EAAG,KAAK,CAACJ,EAAIO,GAAG,eAAeH,EAAG,IAAI,CAACJ,EAAIO,GAAG,eAAeP,EAAIO,GAAG,SAASH,EAAG,KAAK,CAACJ,EAAIO,GAAG,qBAAqBH,EAAG,IAAI,CAACJ,EAAIO,GAAG,eAAeP,EAAIO,GAAG,YAAY,GAAGH,EAAG,SAAS,CAACJ,EAAIO,GAAG,cAAc,IAC9zDE,EAAkB,GCyEtB,G,8BAAA,CACEC,KAAM,UACNC,QAFF,WAII,SAASC,EAAWC,EAAGC,GACrB,OAAOD,EAAIC,EAFbC,QAAQC,IAAI,WAIZD,QAAQC,IAAIJ,EAAWK,aAEzBC,QATF,WAUIH,QAAQC,IAAI,cCpFgV,I,YCO5VG,EAAY,eACd,EACApB,EACAU,GACA,EACA,KACA,KACA,MAIa,aAAAU,E","file":"js/chunk-2d0abfc3.7c9506bb.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h1',{staticStyle:{\"text-algin\":\"center\"}},[_vm._v(\"JavaScript 代码规范\")]),_c('el-tag',[_vm._v(\"变量名\")]),_c('el-card',[_c('el-alert',{attrs:{\"closable\":false,\"title\":\"变量名推荐使用小驼峰（camelCase）：🍐=> firstName <=🌰\"}})],1),_c('el-tag',[_vm._v(\"代码缩进\")]),_c('el-card',[_c('el-alert',{attrs:{\"closable\":false,\"title\":\"通常使用 4或者2 个空格符号来缩进代码块：\"}}),_c('el-alert',{attrs:{\"closable\":false,\"effect\":\"dark\",\"type\":\"error\",\"title\":\"不推荐使用 TAB 键来缩进，因为不同编辑器 TAB 键的解析不一样。\"}})],1),_c('el-tag',[_vm._v(\"空格与运算符\")]),_c('el-card',[_c('el-alert',{attrs:{\"closable\":false,\"title\":\"通常运算符 ( = + - * / ) 前后需要添加空格\"}})],1),_c('el-tag',[_vm._v(\"语句规则\")]),_c('el-card',[_c('el-alert',{attrs:{\"closable\":false,\"title\":\"简单语句的通用规则:\"}}),_c('ul',[_c('li',[_vm._v(\"一条语句通常以分号作为结束符。\")])]),_c('el-alert',{attrs:{\"closable\":false,\"title\":\"复杂语句的通用规则:\"}}),_c('ul',[_c('li',[_vm._v(\"将左花括号放在第一行的结尾。\")]),_c('li',[_vm._v(\"左花括号前添加一空格。\")]),_c('li',[_vm._v(\"将右花括号独立放在一行。\")]),_c('li',[_vm._v(\"不要以分号结束一个复杂的声明。\")])])],1),_c('el-tag',[_vm._v(\"对象规则\")]),_c('el-card',[_c('el-alert',{attrs:{\"closable\":false,\"title\":\"对象定义的规则:\"}}),_c('ul',[_c('li',[_vm._v(\"将左花括号与类名放在同一行。\")]),_c('li',[_vm._v(\"冒号与属性值间有个空格。\")]),_c('li',[_vm._v(\"字符串使用双引号，数字不需要。\")]),_c('li',[_vm._v(\"最后一个属性-值对后面不要添加逗号。\")]),_c('li',[_vm._v(\"将右花括号独立放在一行，并以分号作为结束符号。\")])])],1),_c('el-tag',[_vm._v(\"每行代码字符小于 80\")]),_c('br'),_c('el-tag',[_vm._v(\"命名规则\")]),_c('el-card',[_c('el-alert',{attrs:{\"closable\":false,\"title\":\"一般很多代码语言的命名规则都是类似的:\"}}),_c('ul',[_c('li',[_vm._v(\" 变量和函数为小驼峰法标识, 即除第一个单词之外，其他单词首字母大写（ \"),_c('b',[_vm._v(\"lowerCamelCase\")]),_vm._v(\" ） \")]),_c('li',[_vm._v(\" 全局变量为大写 ( \"),_c('b',[_vm._v(\"UPPERCASE\")]),_vm._v(\" ) \")]),_c('li',[_vm._v(\" 常量 (如 PI) 为大写 ( \"),_c('b',[_vm._v(\"UPPERCASE\")]),_vm._v(\" ) \")])])],1),_c('el-tag',[_vm._v(\"使用小写文件名\")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <h1 style=\"text-algin:center;\">JavaScript 代码规范</h1>\r\n    <el-tag>变量名</el-tag>\r\n    <el-card>\r\n      <el-alert :closable=\"false\" title=\"变量名推荐使用小驼峰（camelCase）：🍐=> firstName <=🌰\"></el-alert>\r\n    </el-card>\r\n    <el-tag>代码缩进</el-tag>\r\n    <el-card>\r\n      <el-alert :closable=\"false\" title=\"通常使用 4或者2 个空格符号来缩进代码块：\"></el-alert>\r\n      <el-alert\r\n        :closable=\"false\"\r\n        effect=\"dark\"\r\n        type=\"error\"\r\n        title=\"不推荐使用 TAB 键来缩进，因为不同编辑器 TAB 键的解析不一样。\"\r\n      ></el-alert>\r\n    </el-card>\r\n    <el-tag>空格与运算符</el-tag>\r\n    <el-card>\r\n      <el-alert :closable=\"false\" title=\"通常运算符 ( = + - * / ) 前后需要添加空格\"></el-alert>\r\n    </el-card>\r\n    <el-tag>语句规则</el-tag>\r\n    <el-card>\r\n      <el-alert :closable=\"false\" title=\"简单语句的通用规则:\"></el-alert>\r\n      <ul>\r\n        <li>一条语句通常以分号作为结束符。</li>\r\n      </ul>\r\n      <el-alert :closable=\"false\" title=\"复杂语句的通用规则:\"></el-alert>\r\n      <ul>\r\n        <li>将左花括号放在第一行的结尾。</li>\r\n        <li>左花括号前添加一空格。</li>\r\n        <li>将右花括号独立放在一行。</li>\r\n        <li>不要以分号结束一个复杂的声明。</li>\r\n      </ul>\r\n    </el-card>\r\n    <el-tag>对象规则</el-tag>\r\n    <el-card>\r\n      <el-alert :closable=\"false\" title=\"对象定义的规则:\"></el-alert>\r\n      <ul>\r\n        <li>将左花括号与类名放在同一行。</li>\r\n        <li>冒号与属性值间有个空格。</li>\r\n        <li>字符串使用双引号，数字不需要。</li>\r\n        <li>最后一个属性-值对后面不要添加逗号。</li>\r\n        <li>将右花括号独立放在一行，并以分号作为结束符号。</li>\r\n      </ul>\r\n    </el-card>\r\n    <el-tag>每行代码字符小于 80</el-tag>\r\n    <br />\r\n    <el-tag>命名规则</el-tag>\r\n    <el-card>\r\n      <el-alert :closable=\"false\" title=\"一般很多代码语言的命名规则都是类似的:\"></el-alert>\r\n      <ul>\r\n        <li>\r\n          变量和函数为小驼峰法标识, 即除第一个单词之外，其他单词首字母大写（\r\n          <b>lowerCamelCase</b>\r\n          ）\r\n        </li>\r\n        <li>\r\n          全局变量为大写 (\r\n          <b>UPPERCASE</b>\r\n          )\r\n        </li>\r\n        <li>\r\n          常量 (如 PI) 为大写 (\r\n          <b>UPPERCASE</b>\r\n          )\r\n        </li>\r\n      </ul>\r\n    </el-card>\r\n    <el-tag>使用小写文件名</el-tag>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"JsBase2\",\r\n  created() {\r\n    console.log(\"created\");\r\n    function myFunction(a, b) {\r\n      return a * b;\r\n    }\r\n    console.log(myFunction.toString());\r\n  },\r\n  mounted() {\r\n    console.log(\"mounted\");\r\n  }\r\n};\r\n</script>\r\n\r\n<style></style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./JsBase2.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./JsBase2.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./JsBase2.vue?vue&type=template&id=0405622a&\"\nimport script from \"./JsBase2.vue?vue&type=script&lang=js&\"\nexport * from \"./JsBase2.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}