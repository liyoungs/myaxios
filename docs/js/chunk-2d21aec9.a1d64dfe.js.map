{"version":3,"sources":["webpack:///./src/components/jsbase/JsBase3.vue?d738","webpack:///src/components/jsbase/JsBase3.vue","webpack:///./src/components/jsbase/JsBase3.vue?93c4","webpack:///./src/components/jsbase/JsBase3.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticStyle","_v","attrs","staticRenderFns","name","methods","myFunc","created","console","log","firstName","lastName","fullName","myObject","mounted","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,KAAK,CAACE,YAAY,CAAC,aAAa,WAAW,CAACN,EAAIO,GAAG,mBAAmBH,EAAG,SAAS,CAACJ,EAAIO,GAAG,UAAUH,EAAG,UAAU,CAACA,EAAG,KAAK,CAACA,EAAG,KAAK,CAACJ,EAAIO,GAAG,+BAA+BH,EAAG,SAAS,CAACJ,EAAIO,GAAG,qBAAqBH,EAAG,UAAU,CAACA,EAAG,KAAK,CAACA,EAAG,KAAK,CAACJ,EAAIO,GAAG,gEAAgEH,EAAG,KAAK,CAACJ,EAAIO,GAAG,+CAA+CH,EAAG,SAAS,CAACJ,EAAIO,GAAG,QAAQH,EAAG,UAAU,CAACA,EAAG,WAAW,CAACI,MAAM,CAAC,UAAW,EAAM,OAAS,OAAO,KAAO,QAAQ,MAAQ,uEAAuE,GAAGJ,EAAG,SAAS,CAACJ,EAAIO,GAAG,sBAAsBH,EAAG,UAAU,CAACA,EAAG,WAAW,CAACI,MAAM,CAAC,MAAQ,iFAAiF,UAAW,EAAM,KAAO,WAAWJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACJ,EAAIO,GAAG,OAAOH,EAAG,IAAI,CAACJ,EAAIO,GAAG,QAAQP,EAAIO,GAAG,mEAAmEH,EAAG,KAAK,CAACJ,EAAIO,GAAG,OAAOH,EAAG,IAAI,CAACJ,EAAIO,GAAG,QAAQP,EAAIO,GAAG,2EAA2E,IAAI,IACnnCE,EAAkB,GCkDtB,GACEC,KAAM,UACNC,QAAS,CACPC,OADJ,WAEM,OAAOX,OAGXY,QAPF,WAQIC,QAAQC,IAAI,WACZD,QAAQC,IAAId,KAAKW,UACjB,IAAJ,GACMI,UAAW,OACXC,SAAU,MACVC,SAAU,WACR,OAAOjB,OAGXa,QAAQC,IAAII,EAASD,aAEvBE,QAnBF,WAoBIN,QAAQC,IAAI,aCvEgV,I,YCO5VM,EAAY,eACd,EACAtB,EACAU,GACA,EACA,KACA,KACA,MAIa,aAAAY,E","file":"js/chunk-2d21aec9.a1d64dfe.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h1',{staticStyle:{\"text-algin\":\"center\"}},[_vm._v(\"JavaScript 函数\")]),_c('el-tag',[_vm._v(\"函数定义\")]),_c('el-card',[_c('ul',[_c('li',[_vm._v(\"函数可以通过声明定义，也可以是一个表达式。\")])])]),_c('el-tag',[_vm._v(\"JavaScript 函数参数\")]),_c('el-card',[_c('ul',[_c('li',[_vm._v(\"JavaScript 函数有个内置的对象 arguments 对象。argument 对象包含了函数调用的参数数组。\")]),_c('li',[_vm._v(\"函数显式参数在函数定义时列出。函数隐式参数在函数调用时传递给函数真正的值。\")])])]),_c('el-tag',[_vm._v(\"闭包\")]),_c('el-card',[_c('el-alert',{attrs:{\"closable\":false,\"effect\":\"dark\",\"type\":\"error\",\"title\":\"闭包是一种保护私有变量的机制，在函数执行时形成私有的作用域，保护里面的私有变量不受外界干扰。直观的说就是形成一个不销毁的栈环境。\"}})],1),_c('el-tag',[_vm._v(\"事件传递有两种方式：冒泡与捕获。\")]),_c('el-card',[_c('el-alert',{attrs:{\"title\":\"事件传递定义了元素事件触发的顺序。 如果你将 <p> 元素插入到 <div> 元素中，用户点击 <p> 元素, 哪个元素的 'click' 事件先被触发呢？\",\"closable\":false,\"type\":\"error\"}}),_c('ul',[_c('li',[_vm._v(\" 在 \"),_c('b',[_vm._v(\"冒泡\")]),_vm._v(\" 中，内部元素的事件会先被触发，然后再触发外部元素，即： p 元素的点击事件先触发，然后会触发 div 元素的点击事件。 \")]),_c('li',[_vm._v(\" 在 \"),_c('b',[_vm._v(\"捕获\")]),_vm._v(\" 中，外部元素的事件会先被触发，然后才会触发内部元素的事件，即： div 元素的点击事件先触发 ，然后再触发 p 元素的点击事件。 \")])])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <h1 style=\"text-algin:center;\">JavaScript 函数</h1>\r\n    <el-tag>函数定义</el-tag>\r\n    <el-card>\r\n      <ul>\r\n        <li>函数可以通过声明定义，也可以是一个表达式。</li>\r\n      </ul>\r\n    </el-card>\r\n    <el-tag>JavaScript 函数参数</el-tag>\r\n    <el-card>\r\n      <ul>\r\n        <li>JavaScript 函数有个内置的对象 arguments 对象。argument 对象包含了函数调用的参数数组。</li>\r\n        <li>函数显式参数在函数定义时列出。函数隐式参数在函数调用时传递给函数真正的值。</li>\r\n      </ul>\r\n    </el-card>\r\n    <el-tag>闭包</el-tag>\r\n    <el-card>\r\n      <el-alert\r\n        :closable=\"false\"\r\n        effect=\"dark\"\r\n        type=\"error\"\r\n        title=\"闭包是一种保护私有变量的机制，在函数执行时形成私有的作用域，保护里面的私有变量不受外界干扰。直观的说就是形成一个不销毁的栈环境。\"\r\n      ></el-alert>\r\n    </el-card>\r\n    <el-tag>事件传递有两种方式：冒泡与捕获。</el-tag>\r\n    <el-card>\r\n      <el-alert\r\n        title=\"事件传递定义了元素事件触发的顺序。 如果你将 <p> 元素插入到 <div> 元素中，用户点击 <p> 元素, 哪个元素的 'click' 事件先被触发呢？\"\r\n        :closable=\"false\"\r\n        type=\"error\"\r\n      ></el-alert>\r\n      <ul>\r\n        <li>\r\n          在\r\n          <b>冒泡</b>\r\n          中，内部元素的事件会先被触发，然后再触发外部元素，即： p 元素的点击事件先触发，然后会触发 div\r\n          元素的点击事件。\r\n        </li>\r\n        <li>\r\n          在\r\n          <b>捕获</b>\r\n          中，外部元素的事件会先被触发，然后才会触发内部元素的事件，即： div 元素的点击事件先触发 ，然后再触发\r\n          p 元素的点击事件。\r\n        </li>\r\n      </ul>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"JsBase3\",\r\n  methods: {\r\n    myFunc() {\r\n      return this;\r\n    }\r\n  },\r\n  created() {\r\n    console.log(\"created\");\r\n    console.log(this.myFunc());\r\n    const myObject = {\r\n      firstName: \"John\",\r\n      lastName: \"Doe\",\r\n      fullName: function() {\r\n        return this;\r\n      }\r\n    };\r\n    console.log(myObject.fullName());\r\n  },\r\n  mounted() {\r\n    console.log(\"mounted\");\r\n  }\r\n};\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./JsBase3.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./JsBase3.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./JsBase3.vue?vue&type=template&id=09ba87dc&\"\nimport script from \"./JsBase3.vue?vue&type=script&lang=js&\"\nexport * from \"./JsBase3.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}